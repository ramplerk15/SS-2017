// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package at.fhj.swd;

public final class ServerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements at.fhj.swd.ServerIF, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_getAuthor_0;
    private static java.lang.reflect.Method $method_getHighScores_1;
    private static java.lang.reflect.Method $method_getUser_2;
    private static java.lang.reflect.Method $method_setUser_3;
    
    static {
	try {
	    $method_getAuthor_0 = at.fhj.swd.ServerIF.class.getMethod("getAuthor", new java.lang.Class[] {});
	    $method_getHighScores_1 = at.fhj.swd.ServerIF.class.getMethod("getHighScores", new java.lang.Class[] {});
	    $method_getUser_2 = at.fhj.swd.ServerIF.class.getMethod("getUser", new java.lang.Class[] {});
	    $method_setUser_3 = at.fhj.swd.ServerIF.class.getMethod("setUser", new java.lang.Class[] {java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ServerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of getAuthor()
    public java.lang.String getAuthor()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAuthor_0, null, 5683193999863030062L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getHighScores()
    public java.util.List getHighScores()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getHighScores_1, null, -1052428455702288763L);
	    return ((java.util.List) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getUser()
    public java.lang.String getUser()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getUser_2, null, -5511863242770432035L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setUser(String)
    public void setUser(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setUser_3, new java.lang.Object[] {$param_String_1}, 289173936531468249L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
